{"version":3,"sources":["components/Navbar/index.js","components/Jumbotron/index.js","components/Table/index.js","components/Modal/index.js","App.js","index.js"],"names":["Nav","Navbar","bg","expand","Brand","href","className","Link","Jumbo","Jumbotron","fluid","Container","Card","style","width","Body","Title","Text","Form","Row","Group","as","Col","controlId","Label","Control","defaultValue","Button","variant","type","Img","src","Table","props","class","scope","users","map","data","name","first","last","phone","email","dob","date","slice","ConfirmationBox","useState","show","setShow","handleClose","onClick","Modal","onHide","Header","closeButton","placeholder","Check","label","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.831b3088.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar } from \"react-bootstrap\";\n\nfunction Nav() {\n    return(\n<Navbar bg=\"light\" expand=\"lg\">\n  <Navbar.Brand href=\"#home\">Paw Prints</Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\">Modal</Nav.Link>\n    </Nav>\n</Navbar>\n );\n}\n\nexport default Nav;","import React from \"react\";\nimport { Jumbotron, Container, Card, Form, Button, Col } from \"react-bootstrap\";\n\nfunction Jumbo() {\nreturn (\n<Jumbotron fluid>\n  <Container>\n    <Card style={{ width: \"18rem\" }}>\n      <Card.Body>\n        <Card.Title>Welcome to Paw Prints</Card.Title>\n        <Card.Text>\n          Find your new best friend.\n          lkadjl;fkjkasdlkjglsdkglsdj;jfsldkfjlskdlgsdllfkjsljdsl\n        </Card.Text>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label>City</Form.Label>\n              <Form.Control />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n              <Form.Label>State</Form.Label>\n              <Form.Control as=\"select\" defaultValue=\"Choose...\">\n                <option>Choose...</option>\n                <option>...</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control />\n            </Form.Group>\n          </Form.Row>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n\n    <Card style={{ width: \"18rem\" }}>\n      <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n    </Card>\n  </Container>\n</Jumbotron>\n);\n}\n\nexport default Jumbo;","import React from \"react\";\n\nfunction Table(props) {\n  return (\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Phone</th>\n          <th scope=\"col\">E-Mail</th>\n          <th scope=\"col\">DOB</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.users.map((data) => {\n          return (\n            <tr>\n              <td>{data.name.first} {data.name.last}</td>\n              <td>{data.phone}</td>\n              <td>{data.email}</td>\n              <td>{data.dob.date.slice(0,10)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\nexport default Table;","import React, {useState} from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nfunction ConfirmationBox() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ConfirmationBox;\n\n// const logIn = props => {\n//   const logIn = provider => {\n//     // props.hideModal();\n//     props.logIn(provider);\n//   };\n\n//   return (\n//     <Modal>\n//       <Card>\n//         <Card.Body>\n//           <h2 className=\"text-center mb-4\">Sign Up</h2>\n//           {error && <Alert variant=\"danger\">{error}</Alert>}\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Group id=\"email\">\n//               <Form.Label>Email</Form.Label>\n//               <Form.Control type=\"email\" ref={emailRef} required />\n//             </Form.Group>\n//             <Form.Group id=\"password\">\n//               <Form.Label>Password</Form.Label>\n//               <Form.Control type=\"password\" ref={passwordRef} required />\n//             </Form.Group>\n//             <Form.Group id=\"password-confirm\">\n//               <Form.Label>Password Confirmation</Form.Label>\n//               <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n//             </Form.Group>\n//             <Button disabled={loading} className=\"w-100\" type=\"submit\">\n//               Sign Up\n//             </Button>\n//           </Form>\n//         </Card.Body>\n//       </Card>\n//       <div className=\"w-100 text-center mt-2\">\n//         Already have an account? <Link to=\"/login\">Log In</Link>\n//       </div>\n//     </Modal>\n\n//   );\n// };\n\n// export default Modal;\n","import React from \"react\";\nimport Nav from \"./components/Navbar\";\nimport Jumbo from \"./components/Jumbotron\";\nimport Table from \"./components/Table\";\nimport ConfirmationBox from \"./components/Modal\";\n\nfunction App() {\n  return (\n    <>\n      <Nav />\n      <Jumbo />\n      <Table />\n      <ConfirmationBox />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send \n"],"sourceRoot":""}